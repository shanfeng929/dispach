<?xml version="1.0" encoding="UTF-8"?>
<web-app xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="http://java.sun.com/xml/ns/javaee" xsi:schemaLocation="http://java.sun.com/xml/ns/javaee http://java.sun.com/xml/ns/javaee/web-app_3_0.xsd" version="3.0">
  <display-name>dispatch</display-name>
  <welcome-file-list>
    <welcome-file>login.jsp</welcome-file>
  </welcome-file-list>
  
  	<!-- 引入log4j日志 start -->
	<context-param>
     <param-name>log4jConfigLocation</param-name>
     <param-value>classpath:log4j.properties</param-value>
	</context-param>
	<context-param> 
		<param-name>log4jRefreshInterval</param-name> 
		<param-value>60000</param-value> 
	</context-param>
	<listener>
         <listener-class>org.springframework.web.util.Log4jConfigListener</listener-class>
  	</listener>
	<!-- 引入log4j日志  end-->

  <session-config>
    <session-timeout>600</session-timeout>
  </session-config>
  <servlet>
    <servlet-name>dispatcher</servlet-name>
    <servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>
    <init-param>
      <param-name>contextConfigLocation</param-name>
      <param-value></param-value>
    </init-param>
    <load-on-startup>1</load-on-startup>
  </servlet>
  <servlet-mapping>
    <servlet-name>dispatcher</servlet-name>
    <url-pattern>/</url-pattern>
  </servlet-mapping>
  <context-param>
    <param-name>contextConfigLocation</param-name>
    <param-value>classpath:context/*.xml</param-value>
  </context-param>
  <filter>
    <filter-name>encodingFilter</filter-name>
    <filter-class>org.springframework.web.filter.CharacterEncodingFilter</filter-class>
    <init-param>
      <param-name>encoding</param-name>
      <param-value>UTF-8</param-value>
    </init-param>
    <init-param>
      <param-name>forceEncoding</param-name>
      <param-value>true</param-value>
    </init-param>
  </filter>
  <filter-mapping>
    <filter-name>encodingFilter</filter-name>
    <url-pattern>/*</url-pattern>
  </filter-mapping>
  <filter>
    <filter-name>springSecurityFilterChain</filter-name>
    <filter-class>org.springframework.web.filter.DelegatingFilterProxy</filter-class>
  </filter>
  <filter-mapping>
    <filter-name>springSecurityFilterChain</filter-name>
    <url-pattern>/*</url-pattern>
  </filter-mapping>
  <filter>
    <filter-name>SessionTimeoutFilter</filter-name>
    <filter-class>com.sunyard.dispatch.security.interceptor.SessionTimeOutFilter</filter-class>
  </filter>
  <filter-mapping>
    <filter-name>SessionTimeoutFilter</filter-name>
    <url-pattern>/*</url-pattern>
  </filter-mapping>
  <listener>
    <listener-class>org.springframework.web.context.ContextLoaderListener</listener-class>
  </listener>
  
  <!-- 启动调度程序 -->
  <servlet>
    <servlet-name>EngineServlet</servlet-name>
    <servlet-class>com.sunyard.dispatch.common.EngineLauncher</servlet-class>
    <load-on-startup>1000</load-on-startup>
  </servlet>
  
  <!-- 恢复任务 -->
  <!-- <servlet>
    <servlet-name>ResumeServlet</servlet-name>
    <servlet-class>com.sunyard.dispatch.common.ResumeServlet</servlet-class>
    <load-on-startup>1008</load-on-startup>
  </servlet> -->
</web-app>